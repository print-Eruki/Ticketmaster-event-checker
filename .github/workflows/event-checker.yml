name: Check for artist events

# Controls when the action will run.
# Runs on a schedule (every hour) and also allows manual runs from the Actions tab.
on:
  schedule:
    - cron: '0 * * * *' # Runs at the top of every hour
  workflow_dispatch:

jobs:
  check-events:
    runs-on: ubuntu-latest
    permissions:
      content: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run the event checker script
        env:
          TICKETMASTER_API_KEY: ${{ secrets.TICKETMASTER_API_KEY }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          RECIPIENTS: $Z{{ secrets.RECIPIENTS }}
        run: python event_checker.py

      # Commit the updated known_events.json file back to the repo
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          # Check if the file has changed. If it has, commit and push.
          if [[ -n $(git status -s known_events.json) ]]; then
            git add known_events.json
            git commit -m "Update known events database"
            git push
          else
            echo "No changes to commit."
          fi